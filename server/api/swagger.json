{
  "openapi": "3.0.0",
  "info": {
    "description": "API documentation for the Distribution Network's API.",
    "version": "1.0.0",
    "title": "Distribution Network Service API",
    "contact": {
      "name": "Christoph Schranz",
      "url": "https://github.com/i-Asset/distribution-network/issues"
    }
  },
  "tags": [
    {
      "name": "Distribution Network",
      "description": "API for the Distribution Network"
    },
    {
      "name": "System Request",
      "description": "API for System requests on the Distribution Network"
    },
    {
      "name": "Stream App Request",
      "description": "API for Stream App requests on the Distribution Network"
    }
  ],
  "paths": {
    "/distributionnetwork": {
      "get": {
        "tags": ["Distribution Network"],
        "summary": "Returns Status",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {"$ref": "#/components/schemas/status"}
          }
        }
      }
    },
    "/distributionnetwork/systems_by_person/{personId}": {
      "parameters": [
        {
          "name": "personId",
          "in": "path",
          "required": true,
          "description": "personId of identity service",
          "type": "integer"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for the user authentication",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "System Request"
        ],
        "summary": "Returns Status",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/status"
            }
          },
          "406": {
            "description": "No or invalid personId or user_id provided",
            "schema": {
              "$ref": "#/components/schemas/status"
            }
          }
        }
      }
    },
    "/distributionnetwork/systems_by_person/-1": {
      "get": {
        "tags": [
          "System Request"
        ],
        "summary": "Returns bookRequests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequests"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book Request"
        ],
        "summary": "Create a new book request system",
        "requestBody": {
          "description": "Book Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "status": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "minimum": 0,
            "maximum": 600
          },
          "url": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "bookRequestPostBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "bookRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "timestamp": {
            "type": "string",
            "format": "number"
          }
        }
      },
      "bookRequests": {
        "type": "object",
        "properties": {
          "bookRequest": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/bookRequest"
            }
          }
        }
      }
    }
  }
}

