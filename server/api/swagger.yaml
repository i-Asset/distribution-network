swagger: "2.0"
info:
  description: "API documentation for the Distribution Network's API."
  version: "1.0.0"
  title: "Distribution Network Service API"
  contact:
    email: "christoph.schranz@salzburgresearcht.at"
    url: "https://github.com/i-Asset/distribution-network/issues"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

#host: "iasset.salzburgresearch.at"
host: "localhost:1908"
## basePath: "/distributionnetwork"  # removed because the basePath is static
schemes:
  - "https"
  - "http"

tags:
- name: "Distribution Network"
  description: "Connection tester for the Distribution Network"
- name: "System Request"
  description: "API for System requests on the Distribution Network"
- name: "Stream App Request"
  description: "API for Stream App requests on the Distribution Network"
- name: "Client App Request"
  description: "API for Client App requests on the Distribution Network"
- name: "AAS Connection Request"
  description: "API for AAS connection requests on the Distribution Network"
- name: "Datastream Request"
  description: "API for Datastream requests on the Distribution Network"

paths:
  /distributionnetwork/:
    get:
      tags:
        - "Distribution Network"
      summary: "Returns Status"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/systems_by_person/{personId}:
    get:
      tags:
        - "System Request"
      summary: "Return all systems that belong to a person"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Systems"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "System Request"
      summary: "Create a new system for a company that belongs to a person. Creates also the corresponding Kafka topics."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "system"
          in: "body"
          description: "A system object to create, functional part of a company"
          required: true
          schema:
            $ref: "#definitions/SystemBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SystemsAndAdmins"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

    put:
      tags:
        - "System Request"
      summary: "Create or update a system for a company that belongs to a person. Creates also the corresponding Kafka topics."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "system"
          in: "body"
          description: "A system object to create, functional part of a company"
          required: true
          schema:
            $ref: "#definitions/SystemBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SystemsAndAdmins"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/delete_system/{personId}/{system}:
    delete:
      tags:
        - "System Request"
      summary: "Delete a system from a company that belongs to a person"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/stream_apps/{personId}/{system}:
    get:
      tags:
        - "Stream App Request"
      summary: "Return all stream apps that belong to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/StreamApps"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "Stream App Request"
      summary: "Create a new stream app for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "stream app"
          in: "body"
          description: "A stream app object to create."
          required: true
          schema:
            $ref: "#definitions/StreamAppBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/StreamApps"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

    put:
      tags:
        - "Stream App Request"
      summary: "Create or update a stream app for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "stream app"
          in: "body"
          description: "A stream app object to create."
          required: true
          schema:
            $ref: "#definitions/StreamAppBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/StreamApps"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/stream_apps/{personId}/{system}/{stream_name}:
    get:
      tags:
        - "Stream App Request"
      summary: "Return a specific stream app that belongs to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "stream_name"
          in: "path"
          description: "stream app name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/StreamApps"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/delete_stream_app/{personId}/{system}/{stream_name}:
    delete:
      tags:
        - "Stream App Request"
      summary: "Delete a stream app from a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "stream_name"
          in: "path"
          description: "stream app name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/client_apps/{personId}/{system}:
    get:
      tags:
        - "Client App Request"
      summary: "Return all client apps that belong to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ClientApps"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "Client App Request"
      summary: "Create a new client app for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "client app"
          in: "body"
          description: "A client app object to create."
          required: true
          schema:
            $ref: "#definitions/ClientAppBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ClientApps"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

    put:
      tags:
        - "Client App Request"
      summary: "Create or update a client app for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "client app"
          in: "body"
          description: "A client app object to create."
          required: true
          schema:
            $ref: "#definitions/ClientAppBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ClientApps"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/client_apps/{personId}/{system}/{client_name}:
    get:
      tags:
        - "Client App Request"
      summary: "Return a specific client app that belongs to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "client_name"
          in: "path"
          description: "client app name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ClientApps"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/delete_client_app/{personId}/{system}/{client_name}:
    delete:
      tags:
        - "Client App Request"
      summary: "Delete a client app from a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "client_name"
          in: "path"
          description: "stream app name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/aas_connections/{personId}/{system}:
    get:
      tags:
        - "AAS Connection Request"
      summary: "Return all aas connections that belong to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AasConnections"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "AAS Connection Request"
      summary: "Create a new AAS connection for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "aas connection"
          in: "body"
          description: "An AAS connection object to create."
          required: true
          schema:
            $ref: "#definitions/AasConnectionBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AasConnections"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

    put:
      tags:
        - "AAS Connection Request"
      summary: "Create or update an AAS connection for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "aas connection"
          in: "body"
          description: "An AAS connection object to create."
          required: true
          schema:
            $ref: "#definitions/AasConnectionBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AasConnections"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/aas_connections/{personId}/{system}/{aas_name}:
    get:
      tags:
        - "AAS Connection Request"
      summary: "Return a specific AAS connection that belongs to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "aas_name"
          in: "path"
          description: "AAS connection name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AasConnections"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/delete_aas_connection/{personId}/{system}/{aas_name}:
    delete:
      tags:
        - "AAS Connection Request"
      summary: "Delete an AAS connection from a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "aas_name"
          in: "path"
          description: "AAS connection name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/datastreams/{personId}/{system}:
    get:
      tags:
        - "Datastream Request"
      summary: "Return all datastreams that belong to a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Datastreams"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "Datastream Request"
      summary: "Create new datastreams for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "datastreams"
          in: "body"
          description: "An array of datastream objects to create."
          required: true
          schema:
            $ref: "#definitions/DatastreamsBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Datastreams"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

    put:
      tags:
        - "Datastream Request"
      summary: "Create or update datastreams for a system that belongs to a person."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "datastreams"
          in: "body"
          description: "An array of datastream objects to create."
          required: true
          schema:
            $ref: "#definitions/DatastreamsBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Datastreams"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/datastreams_per_client/{personId}/{system}/{client_name}:
    get:
      tags:
        - "Datastream Request"
      summary: "Return all datastreams that belong to a client application of a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "client_name"
          in: "path"
          description: "client app name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Datastreams"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"


  /distributionnetwork/datastreams_per_aas/{personId}/{system}/{aas_name}:
    get:
      tags:
        - "Datastream Request"
      summary: "Return all datastreams that belong to an aas connection of a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "aas_name"
          in: "path"
          description: "AAS connection name"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Datastreams"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "403":
          description: "Method not allowed for user."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"



  /distributionnetwork/delete_datastreams/{personId}/{system}:
    delete:
      tags:
        - "Datastream Request"
      summary: "Delete datastreams from from a system"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "integer"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "datastreams"
          in: "body"
          description: "An array of datastream shortnames to delete."
          required: true
          schema:
            $ref: "#definitions/DatastreamShortnamesBody"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

#securityDefinitions:
#  Authorization:
#    type: "apiKey"
#    name: "Authorization"
#    in: "header"

definitions:
  Status:
    type: "object"
    properties:
      status_code:
        type: "integer"
        format: "int32"
      url:
        type: "string"
        format: "string"
      value:
        type: "string"
        format: "string"
  Systems:
    type: "object"
    properties:
      systems:
        type: "array"
        items:
          $ref: "#definitions/System"
  System:
    type: "object"
    properties:
      system_name:
        type: "string"
      company:
        type: "string"
      company_id:
        type: "integer"
        format: "int32"
      created_at:
        type: "string"
      kafka_servers:
        type: "string"
      description:
        type: "string"
      creator:
        $ref: "#definitions/User"
      mqtt_broker:
        $ref: "#definitions/MqttBroker"
  SystemBody:
    type: "object"
    properties:
      workcenter:
        type: "string"
      station:
        type: "string"
      company_id:
        type: "integer"
        format: "int32"
      kafka_servers:
        type: "string"
      description:
        type: "string"
      mqtt_broker:
        $ref: "#definitions/MqttBroker"
  User:
    type: "object"
    properties:
      first_name:
        type: "string"
      sur_name:
        type: "string"
      creator_id:
        type: "integer"
        format: "int32"
      email:
        type: "string"
  MqttBroker:
    type: "object"
    properties:
      mqtt_server:
        type: "string"
      mqtt_topic:
        type: "string"
      mqtt_version:
        type: "string"
  SystemsAndAdmins:
    type: "object"
    properties:
      systems:
        type: "array"
        items:
          $ref: "#definitions/System"
      is_admin_of_sys:
        type: "array"
        items:
          $ref: "#definitions/AdminOfSys"
  AdminOfSys:
    type: "object"
    properties:
      creator_id:
        type: "integer"
      datetime:
        type: "string"
      user_id:
        type: "integer"
        format: "int32"
      system_name:
        type: "string"
  StreamApps:
    type: "object"
    properties:
      stream_apps:
        type: "array"
        items:
          $ref: "#definitions/StreamApp"
  StreamApp:
    type: "object"
    properties:
      name:
        type: "string"
      target_system:
        type: "string"
      logic:
        type: "string"
      is_multi_source:
        type: "boolean"
      description:
        type: "string"
  StreamAppBody:
    type: "object"
    properties:
      name:
        type: "string"
      target_system:
        type: "string"
      logic:
        type: "string"
        required: false
      is_multi_source:
        type: "boolean"
        required: false
      description:
        type: "string"
        required: false
  ClientApps:
    type: "object"
    properties:
      client_apps:
        type: "array"
        items:
          $ref: "#definitions/ClientApp"
  ClientApp:
    type: "object"
    properties:
      name:
        type: "string"
      system_name:
        type: "string"
      submodel_element_collection:
        type: "string"
      on_kafka:
        type: "boolean"
      key:
        type: "string"
      description:
        type: "string"
  ClientAppBody:
    type: "object"
    properties:
      name:
        type: "string"
      submodel_element_collection:
        type: "string"
        required: false
      on_kafka:
        type: "boolean"
        required: false
      description:
        type: "string"
        required: false
  AasConnections:
    type: "object"
    properties:
      aas_connections:
        type: "array"
        items:
          $ref: "#definitions/AasConnection"
  AasConnection:
    type: "object"
    properties:
      name:
        type: "string"
      system_name:
        type: "string"
      registry_uri:
        type: "string"
      description:
        type: "string"
  AasConnectionBody:
    type: "object"
    properties:
      name:
        type: "string"
      registry_uri:
        type: "string"
        required: false
      description:
        type: "string"
        required: false
  Datastreams:
    type: "object"
    properties:
      datastreams:
        type: "array"
        items:
          $ref: "#definitions/Datastream"
  Datastream:
    type: "object"
    properties:
      shortname:
        type: "string"
      name:
        type: "string"
      system_name:
        type: "string"
      client_name:
        type: "string"
      submodel_element_collection:
        type: "string"
      aas_name:
        type: "string"
      registry_uri:
        type: "string"
      datastream_uri:
        type: "string"
      contact_mail:
        type: "string"
      description:
        type: "string"
  DatastreamsBody:
    type: "array"
    items:
      $ref: "#definitions/DatastreamBody"
  DatastreamBody:
    type: "object"
    properties:
      shortname:
        type: "string"
      name:
        type: "string"
      client_app:
        type: "string"
      aas:
        type: "string"
      datastream_uri:
        type: "string"
      description:
        type: "string"
  DatastreamShortnamesBody:
    type: "array"
    items:
      type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
