swagger: "2.0"
info:
  description: "API documentation for the Distribution Network's API."
  version: "1.0.0"
  title: "Distribution Network Service API"
  contact:
    email: "christoph.schranz@salzburgresearcht.at"
    url: "https://github.com/i-Asset/distribution-network/issues"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

# host: "iasset.salzburgresearch.at/distribution-network"
host: "localhost:1908"
# basePath: "/v2"

tags:
- name: "Distribution Network"
  description: "Connection tester for the Distribution Network"
- name: "System Request"
  description: "API for System requests on the Distribution Network"
- name: "Stream App Request"
  description: "API for Stream App requests on the Distribution Network"

paths:
  /distributionnetwork:
    get:
      tags:
        - "Distribution Network"
      summary: "Returns Status"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/systems_by_person/{personId}:
    get:
      tags:
        - "System Request"
      summary: "Return all systems that belong to a person"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Systems"
        "400":
          description: "Authentication error."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "No or invalid personId provided"
          schema:
            $ref: "#/definitions/Status"

    post:
      tags:
        - "System Request"
      summary: "Create a new system for a company that belongs to a person. Creates also the corresponding Kafka topics."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
        - name: "system"
          in: "body"
          description: "A system object to create, functional part of a company"
          required: true
          schema:
            $ref: "#definitions/SystemBody"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Systems"
        "400":
          description: "Authentication error, user not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

  /distributionnetwork/delete_system/{personId}/{system}:
    delete:
      tags:
        - "System Request"
      summary: "Delete a system from a company that belongs to a person"
      produces:
        - "application/json"
      parameters:
        - name: "personId"
          in: "path"
          description: "User ID from the identity service"
          required: true
          type: "string"
        - name: "system"
          in: "path"
          description: "identifier with '_' as level separator"
          required: true
          type: "string"
          format: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token"
          required: true
          type: "string"
          format: "string"
      responses:
        "204":
          description: "Deleted"
          schema:
            $ref: "#/definitions/Status"
        "400":
          description: "User or system not found."
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: "Authentication error, password is incorrect."
          schema:
            $ref: "#/definitions/Status"
        "406":
          description: "Invalid data provided"
          schema:
            $ref: "#/definitions/Status"

securityDefinitions:
  Authorization:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  Status:
    type: "object"
    properties:
      status_code:
        type: "integer"
        format: "int32"
      url:
        type: "string"
        format: "string"
      value:
        type: "string"
        format: "string"
  Systems:
    type: "object"
    properties:
      systems:
        type: "array"
        items:
          $ref: "#definitions/System"
  System:
    type: "object"
    properties:
      system_name:
        type: "string"
      company:
        type: "string"
      company_id:
        type: "integer"
        format: "int32"
      created_at:
        type: "string"
      kafka_servers:
        type: "string"
      description:
        type: "string"
      creator:
        $ref: "#definitions/User"
      mqtt_broker:
        $ref: "#definitions/MqttBroker"
  SystemBody:
    type: "object"
    properties:
      workcenter:
        type: "string"
      station:
        type: "string"
      company_id:
        type: "integer"
        format: "int32"
      kafka_servers:
        type: "string"
      description:
        type: "string"
      mqtt_broker:
        $ref: "#definitions/MqttBroker"
  User:
    type: "object"
    properties:
      first_name:
        type: "string"
      sur_name:
        type: "string"
      creator_id:
        type: "integer"
        format: "int32"
      email:
        type: "string"
  MqttBroker:
    type: "object"
    properties:
      mqtt_server:
        type: "string"
      mqtt_topic:
        type: "string"
      mqtt_version:
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
